import React, {
  Fragment,
  //useRef,
  useState,
  useEffect,
  //useContext,
} from "react";

import { Badge, Nav } from "react-bootstrap";
import { Link } from "react-router-dom";
import { Cart } from "react-bootstrap-icons";
import LoginModal from "../user/LoginModal";
import "../Cart/Cart.css";
import "./MainHeader.css";
import "./icons.css";
import "../user/LoginModal.css";

//import { useNavigate } from "react-router-dom";
//import EcomGoogleLogin from "../user/EcomGoogleLogin";
import useWindowDimensions from "../../utils/ScreenUtil";
import { GoogleLogin, GoogleLogout } from "react-google-login";
import { gapi } from "gapi-script";
//import AuthContext from "../../context/AuthContext";

//ReactSession.setStoreType("localStorage");

const MainHeader = (props) => {
  const [show, setShow] = useState(false);
  const [ecomuser, setEcomuser] = useState({});

  const [userInput, setUserInput] = useState({
    email: "",
    password: "",
  });
  
  
  useEffect(() => {
    const user = sessionStorage.getItem("ecomuser");
    console.log(user);
    if (user !== null) {
      const userJson = JSON.parse(user);
      setEcomuser(userJson);
    }
  }, []);

  const clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;

  //console.log("props.dataFromApp, cartCount", props.dataFromApp);
  const { screenwidth } = useWindowDimensions();

  const loginClickHandler = () => {
    setShow(true);
  };

  const emailInputChangeHandler = (event) => {
    setUserInput((prevState) => {
      return { ...userInput, email: event.target.value };
    });
  };

  const passwordInputChangeHandler = (event) => {
    setUserInput((prevState) => {
      return { ...userInput, password: event.target.value };
    });
  };

  const loginFormSubmitHandler = (e) => {
    //console.log("in loginFormSubmitHandler");
    e.preventDefault();
    let usr = {
      email: userInput.email,
      firstname: userInput.email,
      lastname: "",
      image_url: "",
      isloggedin: true,
      googleauth: false,
    };
    sessionStorage.setItem("ecomuser", JSON.stringify(usr));
    setEcomuser(usr);
    setUserInput({
      email: '',
      password: ''
    });
    setShow(false);
  };

  const logoutBtnClickHandler = (e) => {
    e.preventDefault();
    logoutCleanUp();
    //authcontext.onLogout();
  };

  const logoutCleanUp = () => {
    sessionStorage.removeItem("ecomuser");
    setEcomuser({});
  }

  /**
   * Google authentication method
   */
  useEffect(() => {
    const initClient = () => {
      //gapi.client.init({
      gapi.auth2.init({
        clientId: clientId,
        scope: "",
      });
    };
    gapi.load("client:auth2", initClient);
  });

  const onSuccess = (res) => {
    console.log("success:", res);
    const user = {
      email: res.profileObj.email,
      firstname: res.profileObj.givenName,
      lastname: res.profileObj.familyName,
      image_url: res.profileObj.imageUrl,
      isloggedin: true,
      googleauth: true,
    };
    sessionStorage.setItem("ecomuser", JSON.stringify(user));
    setEcomuser(user);
    setShow(false);
  };

  const onFailure = (err) => {
    console.log("failed:", err);
  };

  const logOut = () => {
    //authcontext.onLogout();
    logoutCleanUp();
  };

  return (
    <Fragment>
      <nav
        className="navbar sticky-top navbar-expand-xl navbar-dark"
        style={{
          backgroundColor: "#343a40",
          padding: "0px",
          marginLeft: "0px",
        }}
      >
        <a className="navbar-brand ml-4" href="/ecom">
          hexcite.com
        </a>
        <div className="d-flex topnav-row ms-auto">
          <form
            className="form-inline my-2 my-lg-0 topnav-row mx-auto"
            action="/products"
          >
            <input
              className="form-control mr-sm-2 topnav-row-item"
              style={{
                width: "auto",
                minWidth: "350px",
                maxWidth: screenwidth,
              }}
              type="search"
              placeholder="Search"
              aria-label="Search"
            />
            <button
              className="btn btn-outline-success topnav-row-item"
              type="submit"
            >
              Search
            </button>
          </form>
        </div>

        <div className="d-flex topnav-row ml-auto">
          {!ecomuser.isloggedin && (
            <Nav className="navbar-nav topnav-row-item">
              <Nav.Link href="#" onClick={loginClickHandler}>
                Login
              </Nav.Link>
            </Nav>
          )}

          {ecomuser?.isloggedin && !ecomuser?.googleauth && (
            <Nav className="ms-auto">
              <Nav.Link href="#" style={{ color: "#007bff" }}>
                Hi, {ecomuser.firstname ? ecomuser.firstname : ecomuser.email}
              </Nav.Link>
              <button
                className="btn btn-danger btn-sm"
                style={{
                  //lineHeight: "auto",
                  maxWidth: "80px",
                  fontSize: "1em",
                  //fontWeight: "bold",
                }}
                onClick={logoutBtnClickHandler}
              >
                Logout
              </button>
            </Nav>
          )}

          {ecomuser?.isloggedin && ecomuser.googleauth && (
            <Nav className="ms-auto">
              <img
                src={ecomuser.image_url ? ecomuser.image_url : ''}
                //alt="user-image"
                style={{
                  maxHeight: "40px",
                  marginTop: "2px",
                  marginBottom: "2px",
                }}
              />
              <Nav.Link href="#" style={{ color: "#007bff" }}>
                Hi, {ecomuser.firstname ? ecomuser.firstname : ecomuser.email}
              </Nav.Link>
              <div style={{ marginTop: "2px", marginBottom: "2px" }}>
                <GoogleLogout
                  clientId={clientId}
                  buttonText="Log-out"
                  onLogoutSuccess={logOut}
                />
              </div>
            </Nav>
          )}
            <Nav className="me-auto navbar-nav">
              <Nav.Link
                as={Link}
                to="/ecom/orders"
                disabled={!ecomuser.isloggedin}
              >
                Orders & Retruns
              </Nav.Link>
            </Nav>

          <Nav.Link as={Link} to="/ecom/cart">
            <div>
              <span className="m-cart-badge">
                <Badge>{props.dataFromApp}</Badge>
              </span>
              <Cart className="m-cart"></Cart>
            </div>
          </Nav.Link>
        </div>
      </nav>

      {show && (
        <div>
          <LoginModal
            title="Sign-In to your account"
            onClose={() => setShow(false)}
            show={show}
          >
            <form onSubmit={loginFormSubmitHandler}>
              <div>
                <div className="mb-3">
                  <label htmlFor="name" className="modal-body-heading">
                    Email
                  </label>
                  <input
                    type="email"
                    className="form-control"
                    id="email"
                    value={userInput.email}
                    onChange={emailInputChangeHandler}
                  />
                </div>
                <div className="mb-3">
                  <label
                    htmlFor="password1"
                    className="form-label modal-body-heading"
                  >
                    Password
                  </label>
                  <input
                    // ref={passwordRef}
                    type="password"
                    className="form-control"
                    id="password1"
                    value={userInput.password}
                    onChange={passwordInputChangeHandler}
                  />
                </div>
                <div style={{ alignContent: "center", textAlign: "center" }}>
                  <button className="btn btn-primary mx-2">Submit</button>
                  <button
                    className="btn btn-primary mx-2"
                    onClick={() => setShow(false)}
                  >
                    Close
                  </button>
                </div>
              </div>
            </form>
            <div className="mt-1" style={{ textAlign: "center" }}>
              <GoogleLogin
                clientId={clientId}
                buttonText="Sign in with Google"
                onSuccess={onSuccess}
                onFailure={onFailure}
                cookiePolicy={"single_host_origin"}
                isSignedIn={true}
              />
            </div>
          </LoginModal>
        </div>
      )}
    </Fragment>
  );
};

export default MainHeader;
